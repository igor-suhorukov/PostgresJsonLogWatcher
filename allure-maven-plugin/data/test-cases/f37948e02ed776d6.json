{"uid":"f37948e02ed776d6","name":"Watch PostgreSQL logs with Docker container","fullName":"com/github/isuhorukov/log/watcher/PostgreSqlLogWatching.feature:6","historyId":"688b400d2af369ddb6767f871315e485","time":{"start":1725483797848,"stop":1725483802929,"duration":5081},"description":"  As a developer/DevOps\n  I want to watch PostgreSQL logs in OpenTelemetry\n  So that I run postgres_log_parser and it watch for PostgreSQL JSON logs, parse it and transfer log records with enrichment","descriptionHtml":"<p>As a developer/DevOps<br />\nI want to watch PostgreSQL logs in OpenTelemetry<br />\nSo that I run postgres_log_parser and it watch for PostgreSQL JSON logs, parse it and transfer log records with enrichment</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"com.github.isuhorukov.log.watcher.steps.PostgreSqlJsonContainerSteps.init()","time":{"start":1725483797851,"stop":1725483797857,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"  As a developer/DevOps\n  I want to watch PostgreSQL logs in OpenTelemetry\n  So that I run postgres_log_parser and it watch for PostgreSQL JSON logs, parse it and transfer log records with enrichment","status":"passed","steps":[{"name":"Given a temporary directory for Postgres data and log files","time":{"start":1725483797868,"stop":1725483797870,"duration":2},"status":"passed","steps":[{"name":"a temporary directory for Postgres data and log files","time":{"start":1725483797869,"stop":1725483797869,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"/tmp/data12753585288048853575"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"And a PostgreSQL Docker container configured to log in JSON format","time":{"start":1725483797870,"stop":1725483797871,"duration":1},"status":"passed","steps":[{"name":"configure PostgreSQL container","time":{"start":1725483797870,"stop":1725483797871,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"/tmp/data12753585288048853575/pg_data"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"When I start the PostgreSQL container with specific logging configurations","time":{"start":1725483797871,"stop":1725483801212,"duration":3341},"status":"passed","steps":[{"name":"I start the PostgreSQL container with specific logging configurations","time":{"start":1725483797871,"stop":1725483801212,"duration":3341},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=postgres:16, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@570cf9d5), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@62430c20, startupAttempts=1, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=null, containerInfo=null, waitStrategy=org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy@4fd1775b, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@74ecc76c)"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"And application should detect and process log entries from the PostgreSQL logs","time":{"start":1725483801212,"stop":1725483802728,"duration":1516},"status":"passed","steps":[{"name":"application should detect and process log entries from the PostgreSQL logs","time":{"start":1725483801212,"stop":1725483802728,"duration":1516},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"GenericContainer(extraHosts=[], image=RemoteDockerImage(imageName=postgres:16, imagePullPolicy=DefaultPullPolicy(), imageNameSubstitutor=org.testcontainers.utility.ImageNameSubstitutor$LogWrappedImageNameSubstitutor@570cf9d5), volumesFroms=[], linkedContainers={}, startupCheckStrategy=org.testcontainers.containers.startupcheck.IsRunningStartupCheckStrategy@62430c20, startupAttempts=1, workingDirectory=null, shmSize=null, copyToFileContainerPathMap={}, copyToTransferableContainerPathMap={}, dependencies=[], dockerClient=LazyDockerClient, containerId=5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d, containerInfo=InspectContainerResponse(args=[-c, log_statement=all, -c, log_destination=jsonlog, -c, logging_collector=on, -c, log_statement=all, -c, compute_query_id=on, -c, log_duration=on, -c, shared_preload_libraries=pg_stat_statements, -c, track_io_timing=true, -c, log_min_duration_statement=0, -c, log_checkpoints=on, -c, log_connections=on, -c, log_disconnections=on, -c, log_min_messages=DEBUG5], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[-c, log_statement=all, -c, log_destination=jsonlog, -c, logging_collector=on, -c, log_statement=all, -c, compute_query_id=on, -c, log_duration=on, -c, shared_preload_libraries=pg_stat_statements, -c, track_io_timing=true, -c, log_min_duration_statement=0, -c, log_checkpoints=on, -c, log_connections=on, -c, log_disconnections=on, -c, log_min_messages=DEBUG5], domainName=, entrypoint=[docker-entrypoint.sh], env=[POSTGRES_USER=test, POSTGRES_PASSWORD=test, POSTGRES_DB=testdb, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/16/bin, GOSU_VERSION=1.17, LANG=en_US.utf8, PG_MAJOR=16, PG_VERSION=16.4-1.pgdg120+1, PGDATA=/var/lib/postgresql/data], exposedPorts=[5432/tcp], hostName=5b6e0160ff76, image=postgres:16, labels={org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=283433a8-42c4-49b1-a3bc-1121c01d7c7b, org.testcontainers.version=1.20.1}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=, volumes={/var/lib/postgresql/data={}}, workingDir=, healthCheck=null), created=2024-09-04T21:03:17.877764267Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[/tmp/data12753585288048853575/pg_data:/var/lib/postgresql/data:rw,z], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=bridge, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={5432/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@65bd587b}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d/hostname, hostsPath=/var/lib/docker/containers/5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d/hosts, logPath=/var/lib/docker/containers/5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d/5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d-json.log, id=5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d, sizeRootFs=null, sizeRw=null, imageId=sha256:69092dbdec0ddd9e1860e67be2c040b83cce9ffec785b2f740f34e8eb43178e5, mountLabel=, name=/dreamy_hypatia, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=72f8a8a0b490a2b2f0bea493b8bb7686d4384208369c00f346802660a8595366, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={5432/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@5c779900}, sandboxKey=/var/run/docker/netns/72f8a8a0b490, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=9737b9f3d07555f0b29cf62f02681161c997daa49842f9cd426c29f41ca4f2fb, gateway=172.17.0.1, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=172.17.0.3, ipPrefixLen=16, ipV6Gateway=, macAddress=02:42:ac:11:00:03, networks={bridge=ContainerNetwork(ipamConfig=null, links=[], aliases=null, networkID=262267e1fa018655eb035ea5bf26b3b84a2979134e756b06063645cf37896ebb, endpointId=9737b9f3d07555f0b29cf62f02681161c997daa49842f9cd426c29f41ca4f2fb, gateway=172.17.0.1, ipAddress=172.17.0.3, ipPrefixLen=16, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=02:42:ac:11:00:03)}), path=docker-entrypoint.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/5b6e0160ff767f05213bb2cdd7dd9701d74329c6bac4c09f3387d8c7164c154d/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=running, running=true, paused=false, restarting=false, oomKilled=false, dead=false, pid=3781, exitCode=0, error=, startedAt=2024-09-04T21:03:18.098155859Z, finishedAt=0001-01-01T00:00:00Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[InspectContainerResponse.Mount(name=null, source=/tmp/data12753585288048853575/pg_data, destination=/var/lib/postgresql/data, driver=null, mode=rw,z, rw=true)], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux), waitStrategy=org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy@4fd1775b, logConsumers=[], tmpFsMapping=null, shouldBeReused=false, hostAccessible=false, createContainerCmdModifiers=[], containerDef=org.testcontainers.containers.ContainerDef@74ecc76c)"},{"name":"arg1","value":"/tmp/data12753585288048853575/pg_data"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Then logs are generated in the specified directory and watched & processed by postgres_log_parser","time":{"start":1725483802728,"stop":1725483802730,"duration":2},"status":"passed","steps":[{"name":"logs are generated in the specified directory and watched & processed by postgres_log_parser","time":{"start":1725483802728,"stop":1725483802730,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"de.dm.infrastructure.logcapture.LogCapture@448d0f51"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":10,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"com.github.isuhorukov.log.watcher.steps.PostgreSqlJsonContainerSteps.shutdown()","time":{"start":1725483802730,"stop":1725483802926,"duration":196},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"host","value":"fv-az714-878"},{"name":"thread","value":"3097@fv-az714-878.main(1)"},{"name":"feature","value":"PostgreSQL JSON Log Watching"},{"name":"story","value":"Watch PostgreSQL logs with Docker container"},{"name":"suite","value":"PostgreSQL JSON Log Watching"},{"name":"testClass","value":"Watch PostgreSQL logs with Docker container"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:com/github/isuhorukov/log/watcher/PostgreSqlLogWatching.feature"},{"name":"package","value":"com.github.isuhorukov.log.watcher.PostgreSqlLogWatching_feature.PostgreSQL JSON Log Watching"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"f37948e02ed776d6.json","parameterValues":[]}